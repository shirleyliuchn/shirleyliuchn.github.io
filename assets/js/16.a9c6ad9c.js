(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{376:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("多线程学习记录")])]),t._v(" "),s("h1",{attrs:{id:"多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[t._v("#")]),t._v(" "),t._v("\n多线程")]),t._v(" "),s("h3",{attrs:{id:"线程与多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程与多线程"}},[t._v("#")]),t._v(" 线程与多线程")]),t._v(" "),s("p",[t._v("线程可以理解为进程中一个负责程序运行的控制单元或执行路径。每个线程都有自己要运行的内容，这个内容可以称为线程要执行的任务。\n一个进程中的多个执行路径,即为多线程。\n一个进程中至少有一个线程，\n开启多个线程为了同时运行多部分的代码。")]),t._v(" "),s("h3",{attrs:{id:"优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),s("p",[t._v("优点：\n解决了多部分同时运行的问题")]),t._v(" "),s("p",[t._v("缺点：\n线程太多会导致效率降低\n所以多线程并不是任何情况下都适用。")]),t._v(" "),s("h3",{attrs:{id:"虚拟机启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机启动"}},[t._v("#")]),t._v(" 虚拟机启动")]),t._v(" "),s("p",[t._v("应用程序的并发执行其实都是cpu做着快速的切换完成的，这个切换是随机的。\n举个例子：虚拟机的启动其实就涉及多个线程（JVM启动时就启动了多个线程），\n这其中至少有两个线程可以分析出来：")]),t._v(" "),s("p",[t._v("1、执行main函数的线程（该线程的任务代码都在main函数中）")]),t._v(" "),s("p",[t._v("2、负责垃圾回收的线程（每个对象都有垃圾回收的方法 即写在Object中，finalize方法 可以调用system的gc()方法调用垃圾回收器）")])])}),[],!1,null,null,null);a.default=n.exports}}]);